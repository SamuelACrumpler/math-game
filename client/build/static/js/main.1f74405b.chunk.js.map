{"version":3,"sources":["routes/game.js","routes/main.js","routes/scores.js","App.js","reportWebVitals.js","index.js"],"names":["game","props","state","name","ops","min","max","firstR","localStorage","getItem","lastR","op","first","second","answer","input","seconds","score","onChange","bind","countDown","console","log","parseInt","garr","split","tops","this","setState","type","timer","setInterval","getRandomProblem","history","push","setItem","tfirst","tsecond","fir","Math","floor","random","sec","rop","length","ans","round","Number","EPSILON","s","clearInterval","event","target","value","getNextTableProblem","sco","className","autocomplete","autoFocus","Component","main","error","onInput","doesNameExist","removeItem","test","val","temp","document","getElementById","classList","contains","add","checkButton","i","remove","err","placeholder","id","class","onClick","enableOperation","aria-label","aria-describedby","onConfirm","arr","window","location","href","result","word","scores","gid","bname","count","gametype","table","path","saveScore","axios","get","then","res","data","finally","sort","a","b","breakcheck","put","_id","ns","splice","post","getScores","r","scope","map","index","App","component","withRouter","exact","render","to","pathname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.1f74405b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass game extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n            name : '',\r\n            ops : [],\r\n            min : '',\r\n            max: '',\r\n            firstR: localStorage.getItem(\"from\"),\r\n            lastR: localStorage.getItem(\"from\"),\r\n            op : '',\r\n            first : '',\r\n            second : '',\r\n            answer: '',\r\n            input : '',\r\n            seconds : 30,\r\n            score : 0\r\n\t\t}\r\n    \r\n        this.onChange = this.onChange.bind(this);\r\n        this.countDown = this.countDown.bind(this);\r\n    \r\n\t\r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n        console.log(localStorage.getItem(\"garr\"));\r\n        if(localStorage.getItem(\"garr\") === null || !localStorage.getItem(\"garr\")){this.props.history.push(\"/\"); return;}\r\n        const min = localStorage.getItem(\"min\");\r\n        const max = parseInt(localStorage.getItem(\"max\"));\r\n        const garr = localStorage.getItem(\"garr\").split(',');\r\n        let tops = []\r\n        console.log(garr)\r\n        if(garr[4] === \"true\"){\r\n            console.log(\"tabletime\")\r\n            this.setState({\r\n                min: min,\r\n                max : max,\r\n                first: min,\r\n                second: min,\r\n                op: \"*\",\r\n                ops: \"Multiplcation Table\",\r\n                answer: min*min,\r\n                seconds: 0,\r\n                type: \"table\"\r\n    \r\n            }, () => {\r\n                console.log(\"multime\")\r\n                this.timer = setInterval(this.countDown, 1000)\r\n            })\r\n            //mul table run\r\n        } else {\r\n            console.log(garr[0])\r\n            if(garr[0] === 'true'){\r\n                tops = tops+\"+\";\r\n            }\r\n            if(garr[1] === 'true'){\r\n                tops = tops+\"-\";\r\n            }\r\n            if(garr[2] === 'true'){\r\n                tops = tops+\"/\";\r\n            }\r\n            if(garr[3] === 'true'){\r\n                tops = tops+\"*\";\r\n            }\r\n            this.setState({\r\n                min: min,\r\n                max : max+1,\r\n                type: \"rand\",\r\n                ops: tops,\r\n                seconds: 60\r\n            }, () => {\r\n                this.getRandomProblem()\r\n                this.timer = setInterval(this.countDown, 1000)\r\n            })\r\n\r\n            \r\n            //start game\r\n        }\r\n\r\n       \r\n\r\n\r\n       \r\n      \r\n\r\n\r\n    }\r\n\r\n    getNextTableProblem(){\r\n        if(this.state.second+\"\" === this.state.max+\"\" && this.state.first+\"\" === this.state.max+\"\"){//End the game due to the player clearing the last problem with\r\n            //Store important values \r\n            //Switch to scoreboard\r\n            localStorage.setItem(\"score\", this.state.score);\r\n            localStorage.setItem(\"seconds\", this.state.seconds);\r\n            this.props.history.push(\"/scores\")\r\n\r\n        }else if(this.state.second+\"\" === this.state.max+\"\"){ //If the second value reaches the cap.\r\n            let tfirst = parseInt(this.state.first)+1\r\n         this.setState({\r\n             first: tfirst,\r\n             second: this.state.min,\r\n             answer: tfirst*this.state.min\r\n        })\r\n\r\n        }else{//Continue as normal\r\n            let tsecond = parseInt(this.state.second)+1\r\n            this.setState({\r\n                second: tsecond,\r\n                answer: this.state.first*tsecond\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    getRandomProblem(){\r\n        let tops = this.state.ops;\r\n\r\n        let fir = Math.floor(Math.random() * (this.state.max - this.state.min) + this.state.min);//Grab a number between the values\r\n        let sec = Math.floor(Math.random() * (this.state.max - this.state.min) + this.state.min);\r\n        let rop = tops[Math.floor(Math.random() * tops.length)];//Use the length to grab a random symbol.\r\n  \r\n        let ans = \"\";\r\n        switch(rop){\r\n            case \"+\":\r\n                ans = fir+sec;\r\n                break;\r\n            case \"-\":\r\n                ans = fir-sec;\r\n                break;\r\n            case \"/\":\r\n                if(sec === 0){sec = sec+1}\r\n                ans = Math.round(((fir/sec) + Number.EPSILON) * 100) / 100;\r\n                break;\r\n            case \"*\":\r\n                ans = fir*sec;\r\n                break;\r\n        }\r\n        this.setState({\r\n            first: fir,\r\n            second: sec,\r\n            op: rop,\r\n            answer: ans\r\n        })\r\n\r\n    }\r\n\r\n\r\n    countDown() {\r\n        let s = this.state.seconds\r\n        if(this.state.type === \"table\"){\r\n            s = this.state.seconds + 1;\r\n        } else{\r\n            s = this.state.seconds - 1;\r\n        }\r\n        this.setState({seconds : s})\r\n        \r\n        if (this.state.seconds === 0) { \r\n          clearInterval(this.timer);\r\n          localStorage.setItem(\"score\", this.state.score);\r\n\r\n            this.props.history.push(\"/scores\")\r\n\r\n        }\r\n      }\r\n\r\n    countUp(){\r\n        let s = this.state.seconds + 1;\r\n        this.setState({seconds : s})\r\n    }\r\n\r\n\r\n    onChange(event) {\r\n\t\tconst state = this.state\r\n\t\tstate[event.target.name] = event.target.value;\r\n        this.setState(state);\r\n        // console.log(typeof this.state.input)\r\n        // console.log(typeof this.state.answer)\r\n        // console.log(this.state.input === this.state.answer)\r\n        if(this.state.input === this.state.answer+\"\"){\r\n            if(this.state.type === \"table\"){\r\n                this.getNextTableProblem()\r\n            }else{\r\n                this.getRandomProblem();\r\n            }\r\n            let sco = this.state.score + 1\r\n            this.setState({ \r\n                input : '',\r\n                score : sco \r\n        });\r\n\r\n        }\r\n        \r\n    }\r\n\r\nrender() {\r\n        return (\r\n            <div className=\"container p-2 shadow rounded bg-light\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n                        <h3>Score: {this.state.score}</h3>\r\n                    </div>\r\n                    <div className=\"col-8 text-center\">\r\n                        <h3>{this.state.ops}</h3>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <h3 className=\"text-right\">Time: {this.state.seconds}</h3>\r\n                    </div>\r\n\t\t\t\t</div>\r\n                <div className=\"text-center mb-4\">\r\n                    <h3>{this.state.first + \" \" + this.state.op + \" \" + this.state.second}</h3>\r\n                </div>\r\n                <div>\r\n                    <input type=\"number\" name=\"input\" value={this.state.input} onChange={this.onChange} className=\"form-control\" autocomplete=\"off\" autoFocus/>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default game;\r\n","import React, { Component } from 'react';\r\n\r\nclass main extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n            name : '',\r\n            ops : [false, false, false, false, false],\r\n            min : '',\r\n            max : '',\r\n            error: ''\r\n        }\r\n        \r\n        this.onChange = this.onChange.bind(this);\r\n        this.onInput = this.onInput.bind(this);\r\n\r\n\r\n\t\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.doesNameExist();\r\n        localStorage.removeItem(\"garr\");\r\n        localStorage.removeItem(\"min\");\r\n        localStorage.removeItem(\"max\");\r\n        localStorage.removeItem(\"score\");\r\n        localStorage.removeItem(\"seconds\");\r\n\r\n        \r\n\t}\r\n\r\n    doesNameExist() {\r\n\t\tif (localStorage.getItem(\"name\") !== \"\" || localStorage.getItem(\"name\") !== null) { \r\n\t\t\tthis.setState({name: localStorage.getItem(\"name\")}) \r\n\t\t}\r\n\t}\r\n\r\n\r\n    onChange(event) {\r\n        const state = this.state;\r\n        state[event.target.name] = event.target.value;\r\n        console.log(event.target.type);\r\n\t\tthis.setState(state);\r\n    }\r\n\r\n    onInput(event){\r\n        const state = this.state;\r\n\r\n        const regex = /^[0-9\\b]+$/;\r\n      const value = event.target.value;\r\n      console.log(\"vc: \" + value )\r\n\r\n      if (value === '' || regex.test(value)) {\r\n          console.log(\"reggy works\")\r\n          state[event.target.name] = value\r\n          this.setState(state);\r\n      } else {\r\n          return;\r\n      }\r\n\r\n      \r\n       \r\n    }\r\n\r\n  \r\n    enableOperation(val){\r\n        let temp = this.state.ops;\r\n        if(val !== 4){\r\n            temp[val] = !temp[val]; //Swaps the boolean value\r\n            \r\n            temp[4] = false;\r\n            if(!document.getElementById(\"btn\"+4).classList.contains(\"disabled\")){\r\n                document.getElementById(\"btn\"+4).classList.add(\"disabled\")\r\n            }\r\n            this.checkButton(val);\r\n            this.setState({ops : temp})\r\n        } else if (val === 4){\r\n            for(var i = 0; i <= 3; i++){\r\n                temp[i] = false;\r\n                if(!document.getElementById(\"btn\"+i).classList.contains(\"disabled\")){\r\n                    document.getElementById(\"btn\"+i).classList.add(\"disabled\")\r\n                }\r\n            }\r\n            temp[4] = true;\r\n            if(document.getElementById(\"btn\"+4).classList.contains(\"disabled\")){\r\n                document.getElementById(\"btn\"+4).classList.remove(\"disabled\")\r\n            }\r\n        }\r\n        \r\n\r\n        \r\n        console.log(this.state.ops);\r\n        console.log(this.state.ops[0] + this.state.ops[1])\r\n        console.log(\"\"+this.state.ops[0]+this.state.ops[1])\r\n    }\r\n\r\n    checkButton(val){\r\n        if(document.getElementById(\"btn\"+val).classList.contains(\"disabled\")){//remove if true\r\n            document.getElementById(\"btn\"+val).classList.remove(\"disabled\")\r\n        } else{// add if true\r\n            document.getElementById(\"btn\"+val).classList.add(\"disabled\")\r\n\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    \r\n    onConfirm() {\r\n        const ops = this.state.ops;\r\n        console.log(ops)\r\n        console.log(ops[0]+ops[1]+ops[2]+ops[3]+ops[4]);\r\n        try{\r\n            if(this.state.name === \"\") throw \"Name is blank.\"\r\n            if(this.state.min === \"\") throw \"From number value is blank.\"\r\n            if(this.state.max === \"\") throw \"To number value is blank.\"\r\n            if(typeof parseInt(this.state.min) !==  \"number\") throw \"The value in the From input is not a number.\"\r\n            if(typeof parseInt(this.state.max) !==  \"number\") throw \"The value in the To input is not a number.\"\r\n            if(this.state.min >= this.state.max) throw \"From number value most be lower than the To number value.\"\r\n            if(this.state.max <= this.state.min) throw \"To number value most be higher than the From number value.\"\r\n            if((ops[0]+ops[1]+ops[2]+ops[3]+ops[4]) === 0 ) throw \"Select the game options before proceeding.\"\r\n\r\n        }catch(err){\r\n            this.setState({error: err})\r\n            if (document.getElementById(\"error\") !== null) {\r\n                document.getElementById(\"error\").classList.remove('d-none');\r\n            }\r\n            return;\r\n        }\r\n\r\n\t\tlocalStorage.setItem(\"name\", this.state.name);\r\n        localStorage.setItem(\"garr\", this.state.ops);\r\n        localStorage.setItem(\"min\", this.state.min);\r\n        localStorage.setItem(\"max\", this.state.max);\r\n\r\n        this.props.history.push(\"/game\");\r\n\r\n    }\r\n\r\n\r\nrender() {\r\n        return (\r\n            <div className=\"container shadow p-2 rounded bg-light\">\r\n                <div className=\"row\">\r\n                    <div className=\"col mb-3\">\r\n\t\t\t\t    \t<input type=\"text\" placeholder=\"name\" name=\"name\" value={this.state.name} onChange={this.onChange} className=\"form-control\" />\r\n                    </div>\r\n\t\t\t\t</div>\r\n                <div className=\"row col mb-3 m-0 p-0\">\r\n\r\n                    \r\n                    <div className=\"col-12 text-center\">\r\n                        <h1>Math Game</h1>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <p>A simple math game. The player chooses the operations they want to practice with. For example clicking on addition and subtraction would only produce addition and subtraction problems.\r\n                    Solutions for the problems can go into the negative values, and the game will avoid dividing by zero. If the number would result in a decimal value, it will be rounded up to the second decimal point.\r\n                    The player would have a total of 60 seconds to score as high as they can. The high scores will be stored based on the operations the player selects and the number range.    \r\n                        <br /> <br />The multiplication table option will go through all possible problems from the start of the number range, to the end of it. For example if the number range is set at 1 to 12, the first problem will be 1x1, the last will be 12x12.\r\n                        On the multiplication table there will be 5 seconds added for each problem, also the scoreboard will be entirely localized </p>\r\n                </div>\r\n                <div className=\"row col mb-3 m-0 p-0\">\r\n                    <div className=\"col-12 text-center\">\r\n                        <h3>Click on the buttons below to set the game mode.</h3>\r\n                    </div>\r\n                    \r\n                    <div className=\"col-12 text-center\">\r\n                        \r\n                    <button id=\"btn0\" class=\"btn btn-primary ml-1 mr-1 disabled\" onClick={() => this.enableOperation(0)}>+</button>\r\n                    <button id=\"btn1\" class=\"btn btn-primary ml-1 mr-1 disabled\" onClick={() => this.enableOperation(1)}>-</button>\r\n                    <button id=\"btn2\" class=\"btn btn-primary ml-1 mr-1 disabled\" onClick={() => this.enableOperation(2)}>/</button>\r\n                    <button id=\"btn3\" class=\"btn btn-primary ml-1 mr-1 disabled\" onClick={() => this.enableOperation(3)}>*</button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row col mb-3 m-0 p-0\">\r\n\r\n                    \r\n                    <div className=\"col-12 text-center\">\r\n                        \r\n                    <button id=\"btn4\" class=\"btn btn-primary ml-1 mr-1 disabled\" onClick={() => this.enableOperation(4)}>Multiplication Tables</button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row col mb-3 m-0 p-0\">\r\n\r\n                    \r\n                    <div className=\"col-12 text-center\">\r\n                    <h3>Number Range</h3>\r\n                    <p></p>\r\n                        \r\n                    \r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon1\">From</span>\r\n                            </div>\r\n                    \r\n                        <input value={this.state.min} name=\"min\"  onInput={this.onInput}  class=\"form-control\" placeholder=\"\" aria-label=\"From\" aria-describedby=\"basic-addon1\"/>\r\n                        </div>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                    <div class=\"input-group mb-3\">\r\n                        <div class=\"input-group-prepend\">\r\n                            <span class=\"input-group-text\" id=\"basic-addon2\">To</span>\r\n                        </div>\r\n                        <input value={this.state.max} name=\"max\"  onInput={this.onInput}  class=\"form-control\" placeholder=\"\" aria-label=\"To\" aria-describedby=\"basic-addon2\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                   \r\n\r\n                    \r\n\r\n                </div>\r\n                <div id=\"error\" className=\"alert alert-danger text-center d-none\">\r\n                Error: {this.state.error}\r\n\r\n                </div>\r\n                <button class=\"btn btn-primary w-100\" onClick={() => this.onConfirm()}> Submit</button>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default main;","//displays scores\r\n//Load from database, read into object array for the proper\r\n\r\n//selects word bank and displays description also name entry\r\n\r\n// need to map the scores out.\r\n// Type needs to be scored in local storage, then cleared after the values have been downloaded\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass score extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n        let url = window.location.href\r\n        let arr = url.split(\"/\");\r\n        let result = arr[0] + \"//\" + arr[2]\r\n\t\tthis.state = {\r\n            word : '',\r\n            input : '',\r\n            scores : [],\r\n            gid : '',\r\n            bname : '',\r\n            count : 0,\r\n            gametype : \"\",\r\n            table : false,\r\n            path: result\r\n\t\t}\r\n\r\n\t\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.path + \"/api/\");\r\n        if(localStorage.getItem(\"garr\") === null || !localStorage.getItem(\"garr\")){this.props.history.push(\"/\"); return;}\r\n        const garr = localStorage.getItem(\"garr\").split(',');\r\n        const min = localStorage.getItem('min');\r\n        const max = localStorage.getItem('max')\r\n        let id = \"\";\r\n        let type = [];\r\n        if(garr[4] === \"true\"){\r\n            console.log(\"tabletime\")\r\n            id = \"m\"+min+\"*\"+max;\r\n            this.setState({table : true})\r\n            //mul table run\r\n        } else {\r\n            if(garr[0] === 'true'){\r\n                type.push(\"A\")\r\n            }\r\n            if(garr[1] === 'true'){\r\n                type.push(\"S\")\r\n            }\r\n            if(garr[2] === 'true'){\r\n                type.push(\"D\")\r\n            }\r\n            if(garr[3] === 'true'){\r\n                type.push(\"M\")\r\n            }\r\n            console.log(type)\r\n            this.setState({table : false})\r\n\r\n            for(var i = 0; i < type.length; i++){\r\n                    id = id + type[i]+\"\";\r\n                \r\n            }\r\n            id = id + 'R' + min + '-' + max;\r\n        }\r\n        console.log(\"test\" + id)\r\n        this.setState({gid : id}, () => {\r\n            this.saveScore();\r\n        }) \r\n        \r\n \r\n    }\r\n    \r\n    saveScore(){\r\n        const table = this.state.table\r\n        const gid = this.state.gid\r\n        const name = localStorage.getItem(\"name\");\r\n        const score = localStorage.getItem(\"score\");\r\n        let timer = null;\r\n        if(localStorage.getItem(\"seconds\")){\r\n           timer = parseInt(localStorage.getItem(\"seconds\"));\r\n\r\n        }\r\n        console.log(\"nametest: \"+name);\r\n        console.log(\"score \" + score);\r\n        console.log(\"id \" + this.state.gid);\r\n        localStorage.removeItem(\"score\");\r\n        localStorage.removeItem(\"seconds\");\r\n        localStorage.removeItem(\"garr\");\r\n\r\n\r\n\r\n        axios.get(this.state.path + '/api/score/count/' + gid)\r\n            .then(res => {\r\n                this.setState({ count: res.data}) //the amount of entries per ID\r\n            }).finally(() =>\r\n            {\r\n                if(this.state.count >= 10){//If the count is 10 or greater avoid adding values, and instead swap one out.\r\n                console.log(\"count \" + this.state.count)\r\n                \r\n                    axios.get(this.state.path + '/api/score/board/' + gid)\r\n                    .then(res => {\r\n                        this.setState({scores : res.data})\r\n                    }).finally(() => {\r\n                        \r\n                        let s = this.state.scores;\r\n\r\n                        console.log(\"b\")\r\n                        console.log(s);\r\n\r\n                        //Should be able to ignore this sorting\r\n                        s.sort(function (a,b){\r\n                            return a.timer - b.timer;\r\n                        });\r\n\r\n                        console.log(\"1\")\r\n\r\n                        console.log(s);\r\n\r\n                        let breakcheck = false;\r\n\r\n                        if(table === true){\r\n                            for(var i = 9; i !== 0; i-- ){\r\n                                console.log(\"tick \"+i)\r\n                                console.log(s)\r\n                                console.log(\"scorecheck cur/iscore\")\r\n                                console.log(score);\r\n                            console.log(s[i].score)\r\n                                if (breakcheck === true){return;}\r\n                                console.log(\"breakcheck check:  \" + breakcheck)\r\n        \r\n                                \r\n                                if(timer < s[i].timer && table === true ){ //if player makes the high score.\r\n                                    console.log(\"timer sort\");\r\n                                    axios.put(this.state.path + '/api/score/' + s[i]._id, {gid, name, score, timer})\r\n                                    breakcheck = true;\r\n                                    let ns = {}\r\n                                    ns.gid = gid;\r\n                                    ns.name = name ;\r\n                                    ns.score = score;\r\n                                    ns.timer = timer;\r\n                                    console.log(s);\r\n                                    s.sort(function (a,b){ //resort\r\n                                        return a.timer - b.timer;\r\n                                    });\r\n                                    console.log(s);\r\n        \r\n                                    s.splice(s.length-1,1)//remove last value in high score board\r\n                                    s.push(ns) //add the value to the index\r\n                                    s.sort(function (a,b){ //resort\r\n                                        return a.timer - b.timer;\r\n                                    });\r\n                                    for(var i = 0; i < s.length; i++){\r\n                                        s[i].score = \"----\"\r\n                                    }\r\n                                    console.log(s);\r\n        \r\n                                    this.setState({scores : s})\r\n                                    \r\n                                }\r\n                            }\r\n\r\n                            if (breakcheck === false){\r\n                                let s = this.state.scores;\r\n                                s.sort(function (a,b){\r\n                                    return a.timer - b.timer;\r\n                                });\r\n                                for(var i = 0; i < s.length; i++){\r\n                                    s[i].score = \"----\"\r\n                                }\r\n                                this.setState({scores : s})\r\n                            }\r\n\r\n                        }else if(table === false){\r\n                            for(var i = 0; i < 10; i++ ){\r\n                                console.log(\"tick \"+i)\r\n                                console.log(s)\r\n                                console.log(\"scorecheck cur/iscore\")\r\n                                console.log(score);\r\n                                 console.log(s[i].score)\r\n                                if (breakcheck === true){return;}\r\n                                console.log(\"breakcheck check:  \" + breakcheck)\r\n        \r\n                                \r\n                                if(score > s[i].score && table === false ){ //if player makes the high score, and not multiplication table\r\n                                    axios.put(this.state.path + '/api/score/' + s[i]._id, {gid, name, score, timer})\r\n                                    breakcheck = true;\r\n                                    let ns = {}\r\n                                    ns.gid = gid;\r\n                                    ns.name = name ;\r\n                                    ns.score = score;\r\n                                    ns.timer = timer;\r\n                                    s.splice(s.length-1,1)//remove last value in high score board\r\n                                    s.push(ns) //add the value to the index\r\n                                    s.sort(function (a,b){ //resort\r\n                                        return b.score - a.score;\r\n                                    });\r\n                                    for(var i = 0; i < s.length; i++){\r\n                                        s[i].timer = \"----\"\r\n                                    }\r\n                                    this.setState({scores : s})\r\n                                    \r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        \r\n                        if (breakcheck === false){\r\n                            let s = this.state.scores;\r\n                            s.sort(function (a,b){\r\n                                return b.score - a.score;\r\n                            });\r\n                            for(var i = 0; i < s.length; i++){\r\n                                s[i].timer = \"----\"\r\n                            }\r\n                            this.setState({scores : s})\r\n                        }\r\n                    })\r\n                } else if((table === false && score !== null) || (table === true && timer !== null)) {//if player has a score while doing random operations mode, or  if player is doing the multiplication table and has a timer set. Prevents empty values from being added.\r\n                    //Simply add value\r\n                    axios.post(this.state.path + '/api/score/', {gid, name, score, timer})\r\n                        .finally(()=>{\r\n                            this.getScores()\r\n                        }) \r\n                        \r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    getScores(){\r\n        axios.get(this.state.path + '/api/score/board/' + this.state.gid)\r\n            .then(res => {\r\n                let r = res.data\r\n                console.log(this.state.table)\r\n                if(this.state.table === false){\r\n                    r.sort(function (a,b){ //resort\r\n                        return b.score - a.score;\r\n                    });\r\n                    for(var i = 0; i < r.length; i++){\r\n                        r[i].timer = \"----\"\r\n                    }\r\n                    \r\n                } else {\r\n                    console.log(\"sort timer\")\r\n                    r.sort(function (a,b){ //resort\r\n                        return b.timer - a.timer;\r\n                    });\r\n                    for(var i = 0; i < r.length; i++){\r\n                        r[i].score = \"----\";\r\n                    }\r\n                }\r\n                this.setState({scores : r})\r\n            })\r\n    }\r\n\r\n    onConfirm() {\r\n\r\n\r\n        this.props.history.push(\"/\");\r\n\r\n    }\r\n\r\n\r\nrender() {\r\n        return (\r\n            <div className=\"container p-2 shadow rounded bg-light\">\r\n                <div className=\"text-center\">\r\n                    <h3>Top Scores For {this.state.bname}</h3>\r\n\t\t\t\t</div>\r\n                <div className=\"\">\r\n                    <table className=\"table\">\r\n                    <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Rank</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Score</th>\r\n                        <th scope=\"col\">Time</th>\r\n                    </tr>\r\n                    </thead>\r\n                    {\r\n                        this.state.scores.map((data, index) => (\r\n                        <tr> \r\n                            <th key={index}>{index+1}</th>   \r\n                            <td>{data.name}</td>\r\n                            <td>{data.score}</td>\r\n                            <td>{data.timer}</td>\r\n                        </tr>\r\n                            )\r\n                        )\r\n\r\n                    }\r\n                    </table>\r\n                </div>\r\n                <div>\r\n                    <button class=\"btn btn-primary w-100\" onClick={() => this.onConfirm()}>Return</button>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default score;\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport game from './routes/game';\nimport main from './routes/main';\nimport scores from './routes/scores';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <main className=\"main full-height h-100 w-100\">\n      <BrowserRouter>\n        \n          <Route path=\"/\" component={withRouter(main)} exact />\n          <Route path=\"/game\" component={withRouter(game)} />\n          <Route path=\"/scores\" component={withRouter(scores)} />\n          <Route render={() => <Redirect to={{pathname: \"/\"}} />} />\n\n  \n      </BrowserRouter>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport $ from 'jquery';\nimport './css/main.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}